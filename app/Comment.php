<?php

namespace App;

use Illuminate\Database\Eloquent\Model;

class Comment extends Model
{
    public function getDateFormat()
    {
        return time(); // TODO: Change the autogenerated stub
    }
    public function add()
    {
        if (!user_ins()->isLogined())
            return ['status' => 0, 'msg' => 'login required'];

        if (!rq('content'))
            return ['status' => 0, 'msg' => 'empty  content'];

        if ((!rq('question_id') && !rq('answer_id')) || (rq('question_id') && rq('answer_id')))
            return ['status' => 0, 'msg' => 'question or answer required'];

        if(rq('question_id')) {
            $question = question_ins()->find(rq('question_id'));
            if(!$question) return ['status' => 0, 'msg' => 'question not exists'];
            $this->question_id = rq('question_id');
        }else{
            $answer = answer_ins()->find(rq('answer_id'));
            if(!$answer) return ['status' => 0, 'msg' => 'answer not exists'];
            $this->answer_id = rq('answer_id');
        }

        if(rq('reply_to'))
        {
            $taget = $this->find('reply_to');
            if(!$taget) return ['status' => 0, 'msg' => 'target comment not exists'];
            $this->reply_to = rq('reply_to');
        }
        $this->content = rq('content');
        $this->user_id = session('user_id');
        return $this->save() ? ['status' => 1, 'id' => $this->id] : ['status' => 0, 'msg' => 'insert failed'];
    }

    public function read()
    {
        if(!rq('question_id') && !rq('answer_id'))
            return ['status' => 0, 'msg' => 'question or answer required'];

        if(rq('question_id')) {
            $question = question_ins()->find(rq('question_id'));
            if(!$question) return ['status' => 0, 'msg' => 'question not exists'];
            $data = $this->where('question_id', rq('question_id'));
        }else{
            $answer = answer_ins()->find(rq('answer_id'));
            if(!$answer) return ['status' => 0, 'msg' => 'answer not exists'];
            $data = $this->where('answer_id', rq('answer_id'));
        }

        $data = $data->get()->keyBy('id');
        return ['status' => 1, 'data' => $data];
    }

    public function asDateTime($value)
    {
        return parent::asDateTime($value); // TODO: Change the autogenerated stub
    }
}
